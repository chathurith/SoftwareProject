/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import Interfaces.Login;
import Interfaces.Mainbase;
import Interfaces.Wedding_order;
import com.sun.glass.events.KeyEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.function.Function;
import javax.swing.table.TableModel;

/**
 *
 * @author ADMIN
 */
public final class pos1 extends javax.swing.JFrame {
Connection con=null;
PreparedStatement  pst=null;
String getValue;
ResultSet rs=null;
Statement st=null;
    
    public pos1() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size =toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2-getHeight()/2);
        getConnection();
        currentDate();
        setValues();
         randomnumbers();
         
     //setprice();
     Txtfield_customername.requestFocus();
   hidecolumns();
    
    
    }
    public Connection getConnection()
            {
              Connection con=null;
    try {
                  try {
                      Class.forName("com.mysql.jdbc.Driver");
                  } catch (ClassNotFoundException ex) {
                      Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
                  }
        con=DriverManager.getConnection("jdbc:mysql://localhost/finalpro","root","");
       JOptionPane.showMessageDialog(null, "Connected");
       return con;
        
    } catch (SQLException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Not connected");
       return null;
    } 
                    
            } 
                
           
    public void setValues(){
        try{
             con=Mainbase.getConnection();
            pst=con.prepareStatement("SELECT Description FROM products");
            rs=pst.executeQuery();
            combo_description.removeAllItems();
            while (rs.next()){
               combo_description.addItem(rs.getString("Description"));
            }
            
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, "products not connected");
        }
    }
    
    
    // Check input fields
    public boolean checkInputs()
    {
        if(
                invoice_no.getText()==null
                || lbl_date.getText()==null
                || time.getText()==null
                || Txtfield_customername.getText()==null
                || txtfield_address.getText()==null
                || txt_telephone.getText()==null
                || combo_description.getSelectedItem()==null
                || txt_quantity.getText()==null
                || txt_unitprice.getText()==null
                || lbl_amount.getText()==null
                )
        {
            return false;
            
              }
        else{
            try{
                Integer.parseInt(txt_telephone.getText());
                Double.parseDouble(txt_unitprice.getText());
                Double.parseDouble(lbl_amount.getText());
                return true;
                
            }catch (Exception ex ){
                return false;
            }
        }
    }
    public void currentDate(){
        Calendar cal=new GregorianCalendar();
        int month=cal.get(Calendar.MONTH);
         int year=cal.get(Calendar.YEAR);
          int day=cal.get(Calendar.DAY_OF_MONTH);
          lbl_date.setText(year+"-"+(month+1)+"-"+day);
          
            int second=cal.get(Calendar.SECOND);
         int minute=cal.get(Calendar.MINUTE);
          int hour=cal.get(Calendar.HOUR);
         time.setText(hour+":"+(minute+1)+":"+second);
          
    }
    
            
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    JFrame pos1;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        search = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        es1 = new javax.swing.JTextField();
        jOptionPane1 = new javax.swing.JOptionPane();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        dat = new javax.swing.JTextField();
        tim = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tot = new javax.swing.JButton();
        cle1 = new javax.swing.JButton();
        inv = new javax.swing.JTextField();
        frame1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Txtfield_customername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_telephone = new javax.swing.JTextField();
        txt_quantity = new javax.swing.JTextField();
        txtfield_address = new javax.swing.JTextField();
        txt_unitprice = new javax.swing.JTextField();
        txt_esttime = new javax.swing.JTextField();
        combo_description = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btn_adddata = new javax.swing.JButton();
        pri = new javax.swing.JButton();
        btn_clrdata = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btn_login = new javax.swing.JButton();
        ssss = new javax.swing.JLabel();
        lbl_amount = new javax.swing.JLabel();
        bill = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_ordercount = new javax.swing.JTable();
        to = new javax.swing.JLabel();
        jLabel_unitcost = new javax.swing.JLabel();
        lbl_totalprice = new javax.swing.JLabel();
        adv = new javax.swing.JLabel();
        txt_advance = new javax.swing.JTextField();
        bal = new javax.swing.JLabel();
        lbl_balance = new javax.swing.JLabel();
        btn_total = new javax.swing.JButton();
        btn_balance = new javax.swing.JButton();
        jLabel_totalcost = new javax.swing.JLabel();
        btn_wedding = new javax.swing.JButton();
        time = new javax.swing.JLabel();
        lbl_date = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtarea_bill1 = new javax.swing.JTextArea();
        recipt = new javax.swing.JButton();
        invoice_no = new javax.swing.JTextField();
        jButton1_searchorder = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(589, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(281, Short.MAX_VALUE))
        );

        jTextField3.setText("jTextField1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton2.setText("jButton2");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Sub Total");

        dat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        tot.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tot.setText("Sub Total");
        tot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totActionPerformed(evt);
            }
        });

        cle1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cle1.setText("Save Data");
        cle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cle1ActionPerformed(evt);
            }
        });

        inv.setText("                            ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        frame1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Customer Name");
        frame1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 110, 23));

        Txtfield_customername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txtfield_customernameActionPerformed(evt);
            }
        });
        Txtfield_customername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Txtfield_customernameKeyPressed(evt);
            }
        });
        frame1.add(Txtfield_customername, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 249, 231, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Telephon  No");
        frame1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 81, 23));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Description");
        frame1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 81, 23));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Address");
        frame1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 81, 23));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Estimated Time");
        frame1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 530, 110, 23));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Quantity");
        frame1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 81, 23));

        txt_telephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_telephoneKeyPressed(evt);
            }
        });
        frame1.add(txt_telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 331, 231, -1));

        txt_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_quantityActionPerformed(evt);
            }
        });
        txt_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_quantityKeyPressed(evt);
            }
        });
        frame1.add(txt_quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 413, 100, -1));

        txtfield_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfield_addressActionPerformed(evt);
            }
        });
        txtfield_address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfield_addressKeyPressed(evt);
            }
        });
        frame1.add(txtfield_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 290, 231, -1));

        txt_unitprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_unitpriceActionPerformed(evt);
            }
        });
        txt_unitprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_unitpriceKeyPressed(evt);
            }
        });
        frame1.add(txt_unitprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 454, 231, -1));

        txt_esttime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_esttimeKeyPressed(evt);
            }
        });
        frame1.add(txt_esttime, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, 231, -1));

        combo_description.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        combo_description.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                combo_descriptionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                combo_descriptionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                combo_descriptionMouseExited(evt);
            }
        });
        combo_description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_descriptionActionPerformed(evt);
            }
        });
        combo_description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_descriptionKeyPressed(evt);
            }
        });
        frame1.add(combo_description, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 372, 231, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Invoice No:");
        frame1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 86, 23));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Date  :");
        frame1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, 60, 23));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Time  :");
        frame1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 190, 54, 23));

        btn_adddata.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_adddata.setText("Add Data");
        btn_adddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adddataActionPerformed(evt);
            }
        });
        frame1.add(btn_adddata, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 580, -1, -1));

        pri.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        pri.setText("Print & Save");
        pri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priActionPerformed(evt);
            }
        });
        frame1.add(pri, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 660, 140, 30));

        btn_clrdata.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_clrdata.setText("Clear Data");
        btn_clrdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clrdataActionPerformed(evt);
            }
        });
        frame1.add(btn_clrdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 580, -1, -1));

        btn_exit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        frame1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 130, -1, 30));

        jPanel4.setBackground(new java.awt.Color(0, 153, 204));
        jPanel4.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(51, 51, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("                                                                                  SARATH PHOTO AND VIDEO PRODUCTION          -         POINT OF SALE SYSTEM");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(-420, 30, 2350, 52);

        frame1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1490, 110));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Unit Price");
        frame1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 100, -1));

        btn_login.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        frame1.add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 130, 100, -1));

        ssss.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ssssMouseClicked(evt);
            }
        });
        frame1.add(ssss, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 40, 40));
        frame1.add(lbl_amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 230, 40));

        bill.setLayout(null);

        table_ordercount.setAutoCreateRowSorter(true);
        table_ordercount.setBackground(new java.awt.Color(255, 255, 204));
        table_ordercount.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        table_ordercount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Quantity", "Unit Price", "Amount", "invo", "date", "time", "Coamount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_ordercount.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table_ordercount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                table_ordercountKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(table_ordercount);

        bill.add(jScrollPane1);
        jScrollPane1.setBounds(10, 52, 460, 190);

        to.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        to.setText("Total Price");
        bill.add(to);
        to.setBounds(202, 260, 83, 25);
        bill.add(jLabel_unitcost);
        jLabel_unitcost.setBounds(20, 60, 150, 20);
        bill.add(lbl_totalprice);
        lbl_totalprice.setBounds(295, 260, 102, 23);

        adv.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        adv.setText("Advance");
        bill.add(adv);
        adv.setBounds(200, 300, 65, 27);

        txt_advance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_advanceActionPerformed(evt);
            }
        });
        txt_advance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_advanceKeyPressed(evt);
            }
        });
        bill.add(txt_advance);
        txt_advance.setBounds(300, 300, 101, 24);

        bal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bal.setText("Balance");
        bill.add(bal);
        bal.setBounds(202, 339, 65, 22);
        bill.add(lbl_balance);
        lbl_balance.setBounds(296, 335, 101, 22);

        btn_total.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_total.setText("Total Price");
        btn_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_totalActionPerformed(evt);
            }
        });
        bill.add(btn_total);
        btn_total.setBounds(20, 260, 100, 30);

        btn_balance.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_balance.setText("Balance");
        btn_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_balanceActionPerformed(evt);
            }
        });
        bill.add(btn_balance);
        btn_balance.setBounds(20, 335, 100, 30);
        bill.add(jLabel_totalcost);
        jLabel_totalcost.setBounds(20, 50, 140, 20);

        frame1.add(bill, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 480, 380));

        btn_wedding.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_wedding.setText("Wedding");
        btn_wedding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_weddingActionPerformed(evt);
            }
        });
        frame1.add(btn_wedding, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, -1, -1));

        time.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        frame1.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 190, 80, 20));

        lbl_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        frame1.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 130, 20));

        txtarea_bill1.setColumns(20);
        txtarea_bill1.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        txtarea_bill1.setRows(5);
        jScrollPane3.setViewportView(txtarea_bill1);

        frame1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 270, 420, 380));

        recipt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        recipt.setText("Add Recipt");
        recipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciptActionPerformed(evt);
            }
        });
        frame1.add(recipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 660, 110, 30));
        frame1.add(invoice_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 100, -1));

        jButton1_searchorder.setText("Search Order");
        jButton1_searchorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_searchorderActionPerformed(evt);
            }
        });
        frame1.add(jButton1_searchorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 140, -1));

        jLabel14.setText("* press space to finalize the bill");
        frame1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 630, -1, -1));

        jLabel15.setText("* press pg up for open search order panel");
        frame1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 650, -1, -1));

        jLabel16.setText("* press pg dn for open wedding order panel");
        frame1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 670, -1, 20));

        getContentPane().add(frame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -20, 1490, 1030));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void Txtfield_customernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txtfield_customernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txtfield_customernameActionPerformed

    private void datActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datActionPerformed

    private void txtfield_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfield_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfield_addressActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        // TODO add your handling code here:
        pos1= new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(pos1, "Conform if you want to exit","SARATH PHOTO AND VIDEO PRODUCTION-POINT OF SALE SYSTEM", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_clrdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clrdataActionPerformed
     resetfields();
    }//GEN-LAST:event_btn_clrdataActionPerformed

    private void priActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priActionPerformed
      String n4=lbl_totalprice.getText();
      String n5=txt_advance.getText();
         double n=Double.parseDouble(n4);
         double w=Double.parseDouble(n5);
         double o=n-w;
            String nn=String.valueOf(o);
            lbl_balance.setText(nn);  
            setbill();
       
            //if ( checkInputs()){
             
             try {
                 
                 con=Mainbase.getConnection();
                 PreparedStatement pst= con.prepareStatement("INSERT INTO customer(Order_ID,Name,TP_No,Address)" +"values(?,?,?,?)");
                 pst.setString(1, invoice_no.getText());
                 pst.setString(2, Txtfield_customername.getText());
                 pst.setString(3,txt_telephone.getText());
                 pst.setString(4,txtfield_address.getText() );
                 pst.executeUpdate();
JOptionPane.showMessageDialog(null, "CUData");
int rows=table_ordercount.getRowCount();
                  pst= con.prepareStatement("INSERT INTO Order_de (Order_ID , Description , Quantity , Unit_Price ,Amount ,Order_Date , Order_Time, Cost ) "+"values(?,?,?,?,?,?,?,?)");
              
                 for(int row = 0; row<rows; row++){
         
                 String des = table_ordercount.getValueAt(row,0).toString();
                 pst.setString(2, des);
                 String quan = table_ordercount.getValueAt(row,1).toString(); 
                 pst.setString(3,quan);
                 String unip = table_ordercount.getValueAt(row,2).toString(); 
                 pst.setString(4,unip);
                 String amount = table_ordercount.getValueAt(row, 3).toString();
                 pst.setString(5, amount);
                 String invo = table_ordercount.getValueAt(row, 4).toString();
                 pst.setString(1, invo);
                 String date= table_ordercount.getValueAt(row, 5).toString();
                 pst.setString(6, date);
                 String time =table_ordercount.getValueAt(row, 6).toString();
                 pst.setString(7, time);
                 String cost = table_ordercount.getValueAt(row, 7).toString();
                 pst.setString(8, cost);
                 pst.addBatch();
               //  pst.executeBatch();
                }
              //   pst.setString(5,lbl_totalprice.getText() );
              //   pst.setString(6 ,lbl_date.getText());
               //  pst.setString(7,time.getText());
                 pst.executeBatch();
                JOptionPane.showMessageDialog(null, "Data");

 try {
        txtarea_bill1.print();
         } catch (PrinterException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
         }
                         
                         
                         } catch (Exception ex) {
                              JOptionPane.showMessageDialog(null, "Error cant print the bill");
            
                         }
               
       resetfields();
       randomnumbers();
Txtfield_customername.requestFocus();
               
                         
                         
  // } else {
             //JOptionPane.showMessageDialog(null, "one or more field are empty");}
    }//GEN-LAST:event_priActionPerformed

    private void btn_adddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adddataActionPerformed
     
   String n1=txt_quantity.getText();
        String n2=txt_unitprice.getText();
        
        int a= Integer.parseInt(n1);
        double b=Double.parseDouble(n2);
      double d= a*b;
        
        String n3=txt_quantity.getText();
        String n4=jLabel_unitcost.getText();
        
        int x= Integer.parseInt(n3);
        double y=Double.parseDouble(n4);
      double s= x*y;
        
        String f=String.valueOf(s);
  jLabel_totalcost.setText(f);
        String c=String.valueOf(d);
        lbl_amount.setText(c);        
    DefaultTableModel model=(DefaultTableModel) table_ordercount.getModel();
     model.addRow(new Object[] {combo_description.getSelectedItem(),txt_quantity.getText(), txt_unitprice.getText(),lbl_amount.getText(),invoice_no.getText(),lbl_date.getText(),time.getText(),jLabel_totalcost.getText()});
     
       lbl_amount.setText(null);
       //invoice_no.setText(null);
      
      // Txtfield_customername.setText(null);
      // txtfield_address.setText(null);
      // txt_telephone.setText(null);
       combo_description.setSelectedIndex(0);
       txt_quantity.setText(null);
       txt_unitprice.setText(null);
      // txt_esttime.setText(null);
  combo_description.requestFocus();
  
    }//GEN-LAST:event_btn_adddataActionPerformed

    public void randomnumbers(){
        Random ran=new Random();
        int n =ran.nextInt(1000000)+1;
        String val=String.valueOf(n);
        invoice_no.setText(val);
    }
    public void price(){
        
    }
    private void cle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cle1ActionPerformed
    
    }//GEN-LAST:event_cle1ActionPerformed

    private void totActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totActionPerformed
         String n1=txt_quantity.getText();
        String n2=txt_unitprice.getText();
        
     int a= Integer.parseInt(n1);
     int b=Integer.parseInt(n2);
     double d= a*b;
        
        String c=String.valueOf(d);
        lbl_amount.setText(c);        
    }//GEN-LAST:event_totActionPerformed

    private void combo_descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_descriptionActionPerformed

        /* 

        try{
                String pkg = combo_description.getSelectedItem().toString();
                String sql = "SELECT Sale_Price FROM products WHERE Description='"+pkg+"'";
                con=Mainbase.getConnection();
                 st =con.createStatement();
                rs=st.executeQuery(sql);
             while(rs.next()) { 
          txt_unitprice.setText(rs.getString("Sale_price"));
           
           }
         }
        catch(Exception ex){
            System.out.println("can't  select");
        }*/
    }//GEN-LAST:event_combo_descriptionActionPerformed

    private void txt_unitpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_unitpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unitpriceActionPerformed

    private void btn_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_totalActionPerformed

  double x=0;
   double y;
   
  
   for( y=0;y<table_ordercount.getRowCount();y++){
 x+=Double.parseDouble(table_ordercount.getValueAt((int) y, 3).toString());
   }
   lbl_totalprice.setText(x+"");
    }//GEN-LAST:event_btn_totalActionPerformed

    private void btn_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_balanceActionPerformed
      String n4=lbl_totalprice.getText();
      String n5=txt_advance.getText();
  double n=Double.parseDouble(n4);
  double w=Double.parseDouble(n5);
     double o=n-w;
      String nn=String.valueOf(o);
      lbl_balance.setText(nn);      
    }//GEN-LAST:event_btn_balanceActionPerformed

    private void ssssMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ssssMouseClicked
        // TODO add your handling code here
        
       
    }//GEN-LAST:event_ssssMouseClicked

    private void reciptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciptActionPerformed
  currentDate(); 
       setbill();
    }//GEN-LAST:event_reciptActionPerformed

    private void combo_descriptionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combo_descriptionMouseEntered
        // TODO add your handling code here:
       
    }//GEN-LAST:event_combo_descriptionMouseEntered

    private void combo_descriptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combo_descriptionMouseClicked
     try {
        setprice();
         setcost();
        // TODO add your handling code here:
        //  String h5 = (String) ca.getSelectedItem();
        // JOptionPane.showMessageDialog(null, h5);
    } catch (SQLException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_combo_descriptionMouseClicked

    private void combo_descriptionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combo_descriptionMouseExited
        // TODO add your handling code here:
        // String h5 = (String) ca.getSelectedItem();
      //  JOptionPane.showMessageDialog(null, h5);
    }//GEN-LAST:event_combo_descriptionMouseExited

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_weddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_weddingActionPerformed
        new Wedding_order().setVisible(true);
    }//GEN-LAST:event_btn_weddingActionPerformed

    private void txt_advanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_advanceActionPerformed
  String n4=lbl_totalprice.getText();
      String n5=txt_advance.getText();
  double n=Double.parseDouble(n4);
  double w=Double.parseDouble(n5);
     double o=n-w;
      String nn=String.valueOf(o);
      lbl_balance.setText(nn);    
        
        try {
        txtarea_bill1.print();
    } catch (PrinterException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
    }
            // if ( checkInputs()){
             
             try {
                 con=Mainbase.getConnection();
                 PreparedStatement pst= con.prepareStatement("INSERT INTO customer(Order_ID,Name,TP_No,Address)" +"values(?,?,?,?)");
                 pst.setString(1, invoice_no.getText());
                 pst.setString(2, Txtfield_customername.getText());
                 pst.setString(3,txt_telephone.getText());
                 pst.setString(4,txtfield_address.getText() );
                 pst.executeUpdate();
JOptionPane.showMessageDialog(null, "CUData");
                  pst= con.prepareStatement("INSERT INTO Order_de (Order_ID , Description , Quantity , Unit_Price ,Amount ,Order_Date , Order_Time ) "+"values(?,?,?,?,?,?,?)");
                 pst.setString(1, invoice_no.getText());
                 int i = table_ordercount.getSelectedRow();
                   TableModel model =table_ordercount.getModel();
                String des = model.getValueAt(i,0).toString();
                 pst.setString(2, des);
                String quan = model.getValueAt(i,1).toString(); 
                 pst.setString(3,quan);
                  String unip = model.getValueAt(i,2).toString(); 
                 pst.setString(4,unip);
                 pst.setString(5,lbl_totalprice.getText() );
                 pst.setString(6 ,lbl_date.getText());
                 pst.setString(7,time.getText());
                 pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data");
con.close();

                         
                         
                         } catch (Exception ex) {
                              JOptionPane.showMessageDialog(null, ex.getMessage());
             }
               
                         
                         
    }//GEN-LAST:event_txt_advanceActionPerformed

    private void Txtfield_customernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txtfield_customernameKeyPressed
        int key=evt.getKeyCode();
        if(key==10){
        txtfield_address.requestFocus();
        }
        if(key==34){
      new Wedding_order().setVisible(true);
        }if(key==33){
         new searchorder().setVisible(true);  
        }if(key==40){
         txtfield_address.requestFocus();
        }
    }//GEN-LAST:event_Txtfield_customernameKeyPressed

    private void txtfield_addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfield_addressKeyPressed
         int key=evt.getKeyCode();
        if(key==10){
        txt_telephone.requestFocus();
        }if(key==40){
         txt_telephone.requestFocus();
        }if(key==38){
        Txtfield_customername.requestFocus();
        }
    }//GEN-LAST:event_txtfield_addressKeyPressed

    private void txt_telephoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telephoneKeyPressed
       int key=evt.getKeyCode();
        if(key==10){
      combo_description.requestFocus();
        }if(key==38){
        txtfield_address.requestFocus();
        }if(key==40){
        combo_description.requestFocus();
        }
    }//GEN-LAST:event_txt_telephoneKeyPressed

    private void combo_descriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_descriptionKeyPressed
 
        int key=evt.getKeyCode();
        if(key==10){
            // combo_description.showPopup();
             try {
        setprice();
         setcost();
        // TODO add your handling code here:
        //  String h5 = (String) ca.getSelectedItem();
        // JOptionPane.showMessageDialog(null, h5);
    } catch (SQLException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
    }
    txt_quantity.requestFocus();
        }if(key==32){
          txt_esttime.requestFocus();
        }if(key==39){
        table_ordercount.requestFocus();
        }
        if(key==38){
        txt_telephone.requestFocus();
        }
    }//GEN-LAST:event_combo_descriptionKeyPressed

    private void txt_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_quantityKeyPressed
        int key=evt.getKeyCode();
        if(key==10){
            
            
   
  txt_unitprice.requestFocus();
        }if(key==40){
         txt_unitprice.requestFocus();
        }if(key==38){
        combo_description.requestFocus();
        }
    }//GEN-LAST:event_txt_quantityKeyPressed

    private void txt_unitpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_unitpriceKeyPressed
        int key=evt.getKeyCode();
        if(key==10){ String n1=txt_quantity.getText();
        String n2=txt_unitprice.getText();
        
        int a= Integer.parseInt(n1);
        double b=Double.parseDouble(n2);
      double d= a*b;
        
        String c=String.valueOf(d);
        lbl_amount.setText(c); 
         String n3=txt_quantity.getText();
        String n4=jLabel_unitcost.getText();
        
        int x= Integer.parseInt(n3);
        double y=Double.parseDouble(n4);
      double s= x*y;
        
        String f=String.valueOf(s);
  jLabel_totalcost.setText(f);
    DefaultTableModel model=(DefaultTableModel) table_ordercount.getModel();
     model.addRow(new Object[] {combo_description.getSelectedItem(),txt_quantity.getText(), txt_unitprice.getText(),lbl_amount.getText(),invoice_no.getText(),lbl_date.getText(),time.getText(),jLabel_totalcost.getText()});
     
       lbl_amount.setText(null);
       //invoice_no.setText(null);
      
      // Txtfield_customername.setText(null);
      // txtfield_address.setText(null);
      // txt_telephone.setText(null);
       combo_description.setSelectedIndex(0);
       txt_quantity.setText(null);
       txt_unitprice.setText(null);
      // txt_esttime.setText(null);
  combo_description.requestFocus();
  
        }if(key==38){
        txt_quantity.requestFocus();
        }
    }//GEN-LAST:event_txt_unitpriceKeyPressed

    private void txt_esttimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_esttimeKeyPressed

  
                       
        int key=evt.getKeyCode();
        if(key==10){
     /*       double x=0;
   double y;
   
  
   for( y=0;y<table_ordercount.getRowCount();y++){
 x+=Double.parseDouble(table_ordercount.getValueAt((int) y, 3).toString());
   }
   lbl_totalprice.setText(x+"");*/
 table_ordercount.requestFocus();
        }if(key==38){
        txt_unitprice.requestFocus();
        }
    }//GEN-LAST:event_txt_esttimeKeyPressed

    private void txt_advanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_advanceKeyPressed
        int key=evt.getKeyCode();
        if(key==10){
            String n4=lbl_totalprice.getText();
      String n5=txt_advance.getText();
  double n=Double.parseDouble(n4);
  double w=Double.parseDouble(n5);
     double o=n-w;
      String nn=String.valueOf(o);
      lbl_balance.setText(nn);  
       setbill();
        try {
        txtarea_bill1.print();
    } catch (PrinterException ex) {
        Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
    }
            // if ( checkInputs()){
             
             try {
                 
                 con=Mainbase.getConnection();
                 PreparedStatement pst= con.prepareStatement("INSERT INTO customer(Order_ID,Name,TP_No,Address)" +"values(?,?,?,?)");
                 pst.setString(1, invoice_no.getText());
                 pst.setString(2, Txtfield_customername.getText());
                 pst.setString(3,txt_telephone.getText());
                 pst.setString(4,txtfield_address.getText() );
                 pst.executeUpdate();
JOptionPane.showMessageDialog(null, "CUData");
int rows=table_ordercount.getRowCount();
                  pst= con.prepareStatement("INSERT INTO Order_de (Order_ID , Description , Quantity , Unit_Price ,Amount ,Order_Date , Order_Time, Cost ) "+"values(?,?,?,?,?,?,?,?)");
              
                for(int row = 0; row<rows; row++){
         
                String des = table_ordercount.getValueAt(row,0).toString();
                 pst.setString(2, des);
                String quan = table_ordercount.getValueAt(row,1).toString(); 
                 pst.setString(3,quan);
                  String unip = table_ordercount.getValueAt(row,2).toString(); 
                 pst.setString(4,unip);
                 String amount = table_ordercount.getValueAt(row, 3).toString();
                 pst.setString(5, amount);
                 String invo = table_ordercount.getValueAt(row, 4).toString();
                 pst.setString(1, invo);
                 String date= table_ordercount.getValueAt(row, 5).toString();
                 pst.setString(6, date);
                 String time =table_ordercount.getValueAt(row, 6).toString();
                 pst.setString(7, time);
                 String cost = table_ordercount.getValueAt(row, 7).toString();
                 pst.setString(8, cost);
                 pst.addBatch();
               //  pst.executeBatch();
                }
              //   pst.setString(5,lbl_totalprice.getText() );
              //   pst.setString(6 ,lbl_date.getText());
               //  pst.setString(7,time.getText());
                 pst.executeBatch();
                JOptionPane.showMessageDialog(null, "Data");


                        
                         
                         } catch (Exception ex) {
                              JOptionPane.showMessageDialog(null, ex.getMessage());
             }
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(pos1.class.getName()).log(Level.SEVERE, null, ex);
            }
       resetfields();
       randomnumbers();
Txtfield_customername.requestFocus();
        }if(key==38){
             table_ordercount.requestFocus();
             }
    }//GEN-LAST:event_txt_advanceKeyPressed

    private void jButton1_searchorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_searchorderActionPerformed
        new searchorder().setVisible(true);  
    }//GEN-LAST:event_jButton1_searchorderActionPerformed

    private void table_ordercountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_ordercountKeyPressed
       int key=evt.getKeyCode();
        if(key==10){
              double x=0;
   double y;
   
  
   for( y=0;y<table_ordercount.getRowCount();y++){
 x+=Double.parseDouble(table_ordercount.getValueAt((int) y, 3).toString());
   }
   lbl_totalprice.setText(x+"");
  txt_advance.requestFocus();
        }if(key==8){
        removeSelectedRows(table_ordercount);
        }if(key==37){
        combo_description.requestFocus();
        }
    }//GEN-LAST:event_table_ordercountKeyPressed

    private void txt_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_quantityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pos1().setVisible(true);
            }
        });
    }
public void setprice() throws SQLException{
 try{
                String pkg = combo_description.getSelectedItem().toString();
                String sql = "SELECT Sale_Price FROM products WHERE Description='"+pkg+"'";
                con=Mainbase.getConnection();
                 st =con.createStatement();
                rs=st.executeQuery(sql);
             while(rs.next()) { 
          txt_unitprice.setText(rs.getString("Sale_price"));
           
           }
         }
        catch(Exception ex){
            System.out.println("can't  select");
        }
 con.close();
}

private void setbill(){
txtarea_bill1.append("\t          SARATH PHOTO & VIDEO PRODUCTION\n"+
              "\t        No. 79-1-A,  Kahatana, Henegama.\n"+
           "\t          Tel- +94 71 812 709 6 \n"+
                   "\t                    +94 77 632 456 9\n"+
                    "\t                   +94 33 225 596 9\n"+
           "\t    E-mail - sarathphoto84@gmail.com"+
           "\n------------------------------------------------------------------------------------------------------------------------------\n"+
           "  Date:"+lbl_date.getText()+
           "                  Time:"+time.getText()+
           "                        Invoice No:"+invoice_no.getText()+
           
          
           "\n------------------------------------------------------------------------------------------------------------------------------\n"+
          
           "  Customer Name:"+Txtfield_customername.getText()+"\t                          Address:"+txtfield_address.getText()+
          "\n------------------------------------------------------------------------------------------------------------------------------\n"+
                " Description"+ " \t                   Quantity"+ "\tUnit Price"+"\t Amount"+"\n"

                           );
      DefaultTableModel model1=(DefaultTableModel)table_ordercount.getModel();
      int xRow=model1.getRowCount(), yCol=model1.getColumnCount();
      Object[ ] [ ] tableData=new Object[xRow] [yCol];
      for(int i=0; i< xRow; i++){
          for(int j=0; j< yCol; j++){
             tableData [i] [j]=model1.getValueAt(i, j);
             txtarea_bill1.append((String) tableData [i] [j]+ "\t");
          }
          txtarea_bill1.append("\n");
      }
              txtarea_bill1.append(
          
           "\n------------------------------------------------------------------------------------------------------------------------------\n"+
           "\t                                  Total Price:"+"\t"+lbl_totalprice.getText()+"\n"+
           "\t                                  Advance:"+"\t"+"\t"+txt_advance.getText()+"\n"+
           " \t                                  Balance:"+"\t"+"\t"+lbl_balance.getText()+"\n"+
              "Estimated Time:"+txt_esttime.getText()+
            "\n------------------------------------------------------------------------------------------------------------------------------\n"+
           
           "\t                THANKYOU COME AGAIN!!!"
           
           );


}
private void resetfields(){
 invoice_no.setText(null);
       lbl_amount.setText(null);
       Txtfield_customername.setText(null);
       txtfield_address.setText(null);
       txt_telephone.setText(null);
       combo_description.setSelectedIndex(0);
       txt_quantity.setText(null);
       txt_unitprice.setText(null);
       txt_esttime.setText(null);
        txtarea_bill1.setText(null);
        lbl_totalprice.setText(null);
        txt_advance.setText(null);
        lbl_balance.setText(null);
        DefaultTableModel model2 = new DefaultTableModel();
         model2.setColumnIdentifiers(new Object[]{"Description","Quantity","Unit Price","Amount"});
      table_ordercount.setModel(model2);
}
 private void homeKeyPressed(java.awt.event.KeyEvent evt) {                                         
       int key=evt.getKeyCode();
        if(key==33){
      new Wedding_order().setVisible(true);
        }
    }
 public void setcost() throws SQLException{
 try{
                String pkg = combo_description.getSelectedItem().toString();
                String sql = "SELECT Cost FROM products WHERE Description='"+pkg+"'";
                con=Mainbase.getConnection();
                 st =con.createStatement();
                rs=st.executeQuery(sql);
             while(rs.next()) { 
        jLabel_unitcost.setText(rs.getString("Cost"));
           
           }
         }
        catch(Exception ex){
            System.out.println("can't  select");
        }
 con.close();
 
}
 
 public void removeSelectedRows(JTable table){
   DefaultTableModel model = (DefaultTableModel) this.table_ordercount.getModel();
   int[] rows = table.getSelectedRows();
   for(int i=0;i<rows.length;i++){
     model.removeRow(rows[i]-i);
   }
}
 
 public void hidecolumns(){
  table_ordercount.getColumn("Coamount").setMinWidth(0);
table_ordercount.getColumn("Coamount").setMaxWidth(0);
table_ordercount.getColumn("Coamount").setWidth(0);
     table_ordercount.getColumn("date").setMinWidth(0);
table_ordercount.getColumn("date").setMaxWidth(0);
table_ordercount.getColumn("date").setWidth(0);
 table_ordercount.getColumn("time").setMinWidth(0);
table_ordercount.getColumn("time").setMaxWidth(0);
table_ordercount.getColumn("time").setWidth(0);
table_ordercount.getColumn("invo").setMinWidth(0);
table_ordercount.getColumn("invo").setMaxWidth(0);
table_ordercount.getColumn("invo").setWidth(0);
 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Txtfield_customername;
    private javax.swing.JLabel adv;
    private javax.swing.JLabel bal;
    private javax.swing.JPanel bill;
    private javax.swing.JButton btn_adddata;
    private javax.swing.JButton btn_balance;
    private javax.swing.JButton btn_clrdata;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_total;
    private javax.swing.JButton btn_wedding;
    private javax.swing.JButton cle1;
    private javax.swing.JComboBox<String> combo_description;
    private javax.swing.JTextField dat;
    private javax.swing.JTextField es1;
    private javax.swing.JPanel frame1;
    private javax.swing.JTextField inv;
    private javax.swing.JTextField invoice_no;
    private javax.swing.JButton jButton1_searchorder;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_totalcost;
    private javax.swing.JLabel jLabel_unitcost;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lbl_amount;
    private javax.swing.JLabel lbl_balance;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_totalprice;
    private javax.swing.JButton pri;
    private javax.swing.JButton recipt;
    private javax.swing.JLabel search;
    private javax.swing.JLabel ssss;
    private javax.swing.JTable table_ordercount;
    private javax.swing.JTextField tim;
    private javax.swing.JLabel time;
    private javax.swing.JLabel to;
    private javax.swing.JButton tot;
    private javax.swing.JTextField txt_advance;
    private javax.swing.JTextField txt_esttime;
    private javax.swing.JTextField txt_quantity;
    private javax.swing.JTextField txt_telephone;
    private javax.swing.JTextField txt_unitprice;
    private javax.swing.JTextArea txtarea_bill1;
    private javax.swing.JTextField txtfield_address;
    // End of variables declaration//GEN-END:variables

  
}
